name: CI

on: [pull_request]

jobs:
  build:
    strategy:
      matrix:
        rust:
          - stable
          - nightly
        os:
          - windows-latest
          - ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust Packages
        run: |
          rustup toolchain install ${{ matrix.rust }} --component rustfmt clippy
          rustup default ${{ matrix.rust }}

      - name: Enable problem matchers
        run: echo ::add-matcher::.github/problem_matchers.json
        if: ${{ matrix.rust == 'nightly' && matrix.os == 'ubuntu-latest' }}

      - name: Build (debug)
        run: cargo build --locked

      - name: Build (release)
        run: cargo build --locked --release

      - name: Test (debug)
        run: cargo test --locked

      - name: Test (release)
        run: cargo test --locked --release

      - name: Run Clippy
        run: cargo clippy --locked --all-targets

      - name: Generate Docs
        run: cargo doc --locked --no-deps --document-private-items

      - name: Check Formatting
        run: cargo fmt --check --all
